@page
@model PDC.Web.Pages.Batches.CreateModel
@section header{
    <script src="~/js/bootstrap-datetimepicker.js"></script>
    <link type="text/css" href="~/css/bootstrap-datetimepicker.css" rel="stylesheet">
    <script>
        $(function () {
            $('#dateStart').datetimepicker({ minDate: Date() });
            $('#dateEnd').datetimepicker({
                useCurrent: false //Important! See issue #1075
            });
            $("#dateStart").on("dp.change", function (e) {
                $('#dateEnd').data("DateTimePicker").minDate(e.date);
            });
            $("#dateEnd").on("dp.change", function (e) {
                $('#dateStart').data("DateTimePicker").maxDate(e.date);
            });
        });
    </script>
    <script>
        $(function () {
            $('#client').change(function () {
                var id = $(this).val();
                var applicants = "../api/applicants/" + id;
                $("#tbl_applicants > tbody").remove();
                $.ajax({
                    type: "GET",
                    url: applicants,
                    async: false,
                    beforeSend: function (x) {
                        if (x && x.overrideMimeType) {
                            x.overrideMimeType("application/j-son;charset=UTF-8");
                        }
                    },
                    dataType: "json",
                    success: function (data) {
                        var _len = data.length;
                        for (i = 0; i < _len; i++) {
                            //debugger
                            //post = data[i];
                            var $tr = $('<tr>').append($('<td>').html(i+1 + '<input type="hidden" value="' + data[i].applicant_id + '"/>'));
                            $tr = $tr.append($('<td>').text(data[i].full_name));
                            $tr = $tr.append($('<td>').text(data[i].email));
                            if (data[i].gender == 0) { $tr = $tr.append($('<td>').text('Male')); } else { $tr = $tr.append($('<td>').text('Female')); }
                            $tr = $tr.append($('<td>').text(data[i].dob));
                            $tr.appendTo("#tbl_applicants");

                        }
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            var count = 0;
            var successBatch = false;
            var successApplicant = false;
            $('#btnCreate').click(function () {
                $('#overlay').show();
                $('#btnCreate').attr("disabled", "disabled");
                var batches = new Array();
                var batch = {};
                batch.client_id = parseInt($('#client').val());
                batch.batch_name = $('#tBatch_batch_name').val();
                batch.batch_start = $('#dateStart').val();
                batch.batch_end = $('#dateEnd').val();
                batch.create_by = $('#hdnUser').val();
                batches.push(batch);
                $.each(batches, function (index, item) {
                    $.ajax({
                        type: "POST",
                        url: "../api/batch",
                        data: JSON.stringify(item),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (r) {
                            //Loop through the Table rows and build a JSON array.
                            var applicants = new Array();
                            successBatch = true;
                            console.log(successBatch);
                            $('#hdnBatch').val(successBatch)
                            $("#tbl_applicants tbody tr").each(function () {
                                var row = $(this);
                                var applicant = {};
                                //var isChecked = row.find($('.selected'));
                                var isChecked = row.hasClass('selected');
                                if (isChecked == true) {
                                    //applicant.applicant_program_id = parseInt(0);
                                    applicant.applicant_id = parseInt(row.find('input[type="hidden"]').eq(0).val());
                                    applicant.program_id = parseInt($('#tApplicantProgram_program_program_id').val());
                                    applicant.batch_id = r.batch_id;
                                    applicants.push(applicant);
                                }
                            });
                            
                            //Send the JSON array to Controller using AJAX.
                            $.each(applicants, function (idx, itm) {
                                $.ajax({
                                    type: "POST",
                                    url: "../api/batchdetail",
                                    data: JSON.stringify(itm),
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (r) {
                                        count += 1;
                                        $('#hdnCount').val(count);
                                        console.log(count);
                                        //alert(JSON.stringify(itm));
                                        successApplicant = true;
                                    },
                                    error: function () {
                                        //alert(JSON.stringify(itm));
                                        successApplicant = false;
                                    }
                                });
                            });
                        },
                        error: function () {
                            alert(JSON.stringify(item));
                            successBatch = false;
                        }
                    });
                });
                alert($('#hdnCount').val() + " applicants have added to batch " + $('#tBatch_batch_name').val());
                window.location.replace("../Batches/");
                $('#overlay').hide();
                $('#btnCreate').removeAttr("disabled");
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#tbl_applicants").on('click', 'tbody tr', function (event) {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                } else {
                    $(this).addClass('selected');
                    //var value = $(this).find('td:first').find('input[type="hidden"]').val();
                    //var isChecked = $(this).hasClass('selected');
                    //alert(isChecked);
                }
            });
        });
    </script>
    <style>
        td {
            cursor: pointer;
        }

        tbody tr:hover {
            background-color: #2A3F54;
            color: #FFF;
        }

        .selected {
            background-color: brown;
            color: #FFF;
        }
    </style>
}
@{
    ViewData["Title"] = "Batches";
    Layout = "~/Pages/_Layout.cshtml";
}
<h2>Create Batch</h2>
<hr />
<div class="row">
    <input type="hidden" id="hdnCount" />
    <input type="hidden" id="hdnBatch" />
    <div class="col-md-12">
        <input asp-for="userName" type="hidden" value="@Model.userName" id="hdnUser" />
        @*<form method="post">*@
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="tBatch.batch_name" class="control-label">Batch Name</label>
                    <input asp-for="tBatch.batch_name" class="form-control" placeholder="Batch Name" />
                    <span asp-validation-for="tBatch.batch_name" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="tApplicantProgram.program_id" class="control-label">Program</label>
                    <select asp-for="tApplicantProgram.program.program_id" class="form-control" asp-items="ViewBag.programs"></select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="tApplicantProgram.applicant.client_id" class="control-label">Client</label>
                    <select class="form-control" asp-items="ViewBag.clients" asp-for="tApplicantProgram.applicant.client_id" id="client">
                        <option selected="selected">- Select Client -</option>
                    </select>
                </div>
            </div>
            <div class="col-md-4 has-feedback">
                <div class="form-group">
                    <label asp-for="tBatch.batch_start" class="control-label">Batch Start</label>
                    <input type="text" asp-for="tBatch.batch_start" class="form-control has-feedback-left" id="dateStart" required />
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                </div>
            </div>
            <div class="col-md-4 has-feedback">
                <div class="form-group">
                    <label asp-for="tBatch.batch_end" class="control-label">Batch End</label>
                    <input type="text" asp-for="tBatch.batch_end" class="form-control has-feedback-left" id="dateEnd" required />
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12" id="tableContainer">
                <table id="tbl_applicants" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>E-mail</th>
                            <th>Gender</th>
                            <th>Date of Birth</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div class="form-group">
            <input value="Create" class="btn btn-primary" id="btnCreate" type="submit" />
        </div>
        @*</form>*@
    </div>
</div>
<div>
    <a asp-page="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
