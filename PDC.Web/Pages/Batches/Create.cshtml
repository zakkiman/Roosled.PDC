@page
@model PDC.Web.Pages.Batches.CreateModel
@section header{
    <script src="~/css/bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
    <link type="text/css" href="~/css/bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css">
    <script>
        $(function () {
            $('#dateStart').datetimepicker({ useCurrent: true, minDate: Date() });
            $('#dateEnd').datetimepicker({
                useCurrent: false //Important! See issue #1075
            });
            $("#dateStart").on("dp.change", function (e) {
                $('#dateEnd').data("DateTimePicker").minDate(e.date);
            });
            $("#dateEnd").on("dp.change", function (e) {
                $('#dateStart').data("DateTimePicker").maxDate(e.date);
            });
        });
    </script>
    <script>
        $(function () {
            $('#client').change(function () {
                var id = $(this).val();
                var applicants = "http://localhost:60754/api/applicants/" + id;
                $("#tbl_applicants > tbody").remove();
                $.ajax({
                    type: "GET",
                    url: applicants,
                    async: false,
                    beforeSend: function (x) {
                        if (x && x.overrideMimeType) {
                            x.overrideMimeType("application/j-son;charset=UTF-8");
                        }
                    },
                    dataType: "json",
                    success: function (data) {
                        var _len = data.length;
                        for (i = 0; i < _len; i++) {
                            //debugger
                            //post = data[i];
                            var $tr = $('<tr>').append($('<td>').html('<input type="checkbox" class="chkSelect"/><input type="hidden" value="' + data[i].applicant_id + '"/>'));
                            $tr = $tr.append($('<td>').text(data[i].full_name));
                            $tr = $tr.append($('<td>').text(data[i].email));
                            if (data[i].gender == 0) { $tr = $tr.append($('<td>').text('Male')); } else { $tr = $tr.append($('<td>').text('Female')); }
                            $tr = $tr.append($('<td>').text(data[i].dob));
                            $tr.appendTo("#tbl_applicants");

                        }
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#ckbCheckAll').click(function () {
                var isChecked = $(this).prop('checked');
                $('#tbl_applicants tr:has(td)').find('input[type="checkbox"]').prop('checked', isChecked);
                //if (isChecked == true) {
                //    $('#tbl_applicants tr:has(td)').find('input[type="checkbox"]').attr('checked', 'checked');
                //} else {
                //    $('#tbl_applicants tr:has(td)').find('input[type="checkbox"]').removeAttr('checked');
                //}
            });

            $('#tbl_applicants tr:has(td)').find('input[type="checkbox"]').click(function () {
                var isChecked = $(this).prop('checked');
                var isHeaderChecked = $("#ckbCheckAll").prop('checked');
                alert(isChecked);
                if (isChecked == false && isHeaderChecked) {
                    //$("#ckbCheckAll").removeAttr('checked');
                    $("#ckbCheckAll").prop('checked', isChecked);
                }
                else {
                    $('#tbl_applicants tr:has(td)').find('input[type="checkbox"]').each(function () {
                        if ($(this).prop("checked") == false)
                            isChecked = false;
                    });
                    console.log(isChecked);
                    $("#ckbCheckAll").prop('checked', isChecked);
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#btnCreate').click(function () {
                //Loop through the Table rows and build a JSON array.
                var applicants = new Array();

                $("#tbl_applicants tbody tr").each(function () {
                    var row = $(this);
                    var applicant = {};
                    var isChecked = row.find($('.chkSelect')).prop('checked')
                    alert(isChecked);
                    if (isChecked == true) {
                        //applicant.applicant_program_id = parseInt(0);
                        applicant.applicant_id = parseInt(row.find('input[type="hidden"]').eq(0).val());
                        applicant.program_id = parseInt($('#tApplicantProgram_program_program_id').val());
                        applicant.batch_name = $('#tApplicantProgram_batch_name').val();
                        applicant.approval_status = 'Requested';
                        //applicant.approved_by = '';
                        applicant.approved_date = '9999-31-12T23:59:59';
                        applicant.batch_start = $('#dateStart').val();
                        applicant.batch_end = $('#dateEnd').val();
                        applicants.push(applicant);
                    } else {
                        alert('unchecked');
                    }

                });
                //Send the JSON array to Controller using AJAX.
                $.each(applicants, function (index, item) {
                    $.ajax({
                        type: "POST",
                        url: "http://localhost:60754/api/batch",
                        data: JSON.stringify(item),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (r) {
                            alert(r + " record(s) inserted.");
                            alert(JSON.stringify(item));
                            window.location.replace("http://localhost:60754/Batches/");
                        },
                        error: function () {
                            alert('failure');
                            alert(JSON.stringify(item));
                        }
                    });
                });
            });
        });
    </script>
}
@{
    ViewData["Title"] = "Batches";
    Layout = "~/Pages/_Layout.cshtml";
}

<h2>Create Batch</h2>

<hr />
<div class="row">
    <div class="col-md-12">
        @*<form method="post">*@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="tApplicantProgram.batch_name" class="control-label">Batch Name</label>
                        <input asp-for="tApplicantProgram.batch_name" class="form-control" placeholder="Batch Name" />
                        <span asp-validation-for="tApplicantProgram.batch_name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="tApplicantProgram.program_id" class="control-label">Program</label>
                        <select asp-for="tApplicantProgram.program.program_id" class="form-control" asp-items="ViewBag.programs"></select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="tApplicantProgram.applicant.client_id" class="control-label">Client</label>
                        <select class="form-control" asp-items="ViewBag.clients" asp-for="tApplicantProgram.applicant.client_id" id="client">
                            <option selected="selected">- Select Client -</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4 has-feedback">
                    <div class="form-group">
                        <label asp-for="tApplicantProgram.batch_start" class="control-label">Batch Start</label>
                        <input type="text" asp-for="tApplicantProgram.batch_start" class="form-control has-feedback-left" id="dateStart" required />
                        <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    </div>
                </div>
                <div class="col-md-4 has-feedback">
                    <div class="form-group">
                        <label asp-for="tApplicantProgram.batch_end" class="control-label">Batch End</label>
                        <input type="text" asp-for="tApplicantProgram.batch_end" class="form-control has-feedback-left" id="dateEnd" required />
                        <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <table id="tbl_applicants" class="table table-striped table-bordered bulk_action dataTable no-footer">
                        <thead>
                            <tr>
                                <th>
                                    <input id="ckbCheckAll" class="flat" type="checkbox">
                                </th>
                                <th>Name</th>
                                <th>E-mail</th>
                                <th>Gender</th>
                                <th>Date of Birth</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="form-group">
                <input value="Create" class="btn btn-primary" id="btnCreate" type="submit" />
            </div>
        @*</form>*@
    </div>
</div>
<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
