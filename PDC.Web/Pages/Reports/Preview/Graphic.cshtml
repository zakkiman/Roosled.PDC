@page
@model PDC.Web.Pages.Reports.Preview.IndexModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/css/font-awesome/css/font-awesome.css" rel="stylesheet">
    <script src="~/js/jquery-2.2.4.min.js"></script>
    <script src="~/js/bootstrap-3.3.7.min.js"></script>
    <script src="~/css/moment/moment.js"></script>
    <!--[if lte IE 8]>
        <script language="javascript" type="text/javascript" src="/js/flot/excanvas.min.js"></script>
    <![endif]-->
    <script type="text/javascript" src="~/js/Chart.bundle.js"></script>
    <script type="text/javascript" src="~/js/jquery.flot.min.js"></script>
    <script type="text/javascript" src="~/js/jquery.flot.time.js"></script>
    <script type="text/javascript" src="~/js/jshashtable-2.1.js"></script>
    <script type="text/javascript" src="~/js/jquery.numberformatter-1.2.3.min.js"></script>
    <script type="text/javascript" src="~/js/jquery.flot.symbol.js"></script>
    <script type="text/javascript" src="~/js/jquery.flot.axislabels.js"></script>
    <script src="~/css/tinymce/tinymce.min.js"></script>
    <script src="~/js/magnifiy.js"></script>
    <link href="~/css/magnify.css" rel="stylesheet" />
    <link href="~/css/bootstrap.css" rel="stylesheet" />
    <script>
        var horizontalBarChartData = {
            labels: [@for (int i = 0; i < 4; i++)
            {
                if (i < 3) {
                            @: "@Model.rangkings[i].type.type_name",
                        } else {
                            @: "@Model.rangkings[i].type.type_name"
                        }
            }
                    @for (int j = 0; j < Model.rangkings.Count; j++)
                    {
                        if (Model.rangkings[j].type.type_name.ToUpper() == "BORDERLINE" && Model.rangkings[j].zScore > 0)
                        {
                            @: ,"@Model.rangkings[j].type.type_name"
                        }
                    }
            ],
            datasets: [{
                label: 'Z-Score',
                backgroundColor: "rgba(220,220,220,0.5)",
                data: [
                        @for (int i = 0; i < 4; i++)
                        {
                            if (i < 3) {
                                @: @Model.rangkings[i].zScore,
                            } else {
                                @: @Model.rangkings[i].zScore
                            }
                        }
                        @for (int j = 0; j < Model.rangkings.Count; j++)
                        {
                            if (Model.rangkings[j].type.type_name.ToUpper() == "BORDERLINE" && Model.rangkings[j].zScore > 0)
                            {
                                @: ,@Model.rangkings[j].zScore
                            }
                        }
                ]
            }]
        };

        window.onload = function () {
            var ctx = document.getElementById("canvas").getContext("2d");
            window.myHorizontalBar = new Chart(ctx, {
                type: 'horizontalBar',
                data: horizontalBarChartData,
                options: {
                    // Elements options apply to all of the options unless overridden in a dataset
                    // In this case, we are setting the border of each horizontal bar to be 2px wide and green
                    elements: {
                        rectangle: {
                            borderWidth: 2,
                            borderColor: 'rgb(0, 255, 0)',
                            borderSkipped: 'left'
                        }
                    },
                    responsive: true,
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Profile Graphic'
                    }
                }
            });
        };
    </script>
    <style>
        body {
            margin: 0;
        }
        canvas {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }

        main {
            position: relative;
            background: white;
            height: 400px;
            width: 60%;
            margin: 0 auto;
            padding: 20px;
            resize: both;
            overflow: auto;
        }

            main div {
                transform: translate(-50%, -50%);
                position: absolute;
                top: 50%;
                left: 50%;
                padding: 20px;
                resize: both;
                overflow: auto;
            }
    </style>
</head>
<body>
    <main>
        <div>
            <canvas id="canvas" width="650" height="340"></canvas>
        </div>
    </main>
    <main>
        <div>
            <h4>Evolutionary and Domain Personality :</h4>
            <table class="table table-bordered">
                <thead>
                    <tr style="background-color:#000; color:#fff; font-size:.9em; text-align:center; width:50%">
                        <td>Personality</td>
                        <td>Pain >< Pleasure</td>
                        <td>Passive >< Active</td>
                        <td>Self >< Other</td>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < 4; i++)
                    {
                        <tr style="text-align:center;">
                            <td>@Model.rangkings[i].type.type_name</td>
                            <td>@Model.rangkings[i].type.pain_pleasure</td>
                            <td>@Model.rangkings[i].type.passive_active</td>
                            <td>@Model.rangkings[i].type.self_other</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </main>
</body>
</html>
